syntax = "proto3";

package storage;

import "google/protobuf/timestamp.proto";

option go_package = ".;storage";

service Proposal {
  rpc GetByID(ProposalByIDRequest) returns (ProposalByIDResponse);
  rpc GetByFilter(ProposalByFilterRequest) returns (ProposalByFilterResponse);
}

message ProposalByIDRequest {
  string proposal_id = 1;
}

message ProposalInfo {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  string author = 4;
  string dao_id = 5;
  string title = 7;
  string state = 8;
  string type = 9;
  string privacy = 10;
  bool spam = 11;
  repeated Timeline timeline = 12;
  repeated string choices = 13;
  google.protobuf.Timestamp original_created_at = 14;
  google.protobuf.Timestamp voting_started_at = 15;
  google.protobuf.Timestamp voting_ended_at = 16;
}

message Timeline {
  string action = 1;
  google.protobuf.Timestamp created_at = 2;
}

message ProposalByIDResponse {
  ProposalInfo proposal = 1;
}

enum ProposalInfoLevel {
  PROPOSAL_INFO_LEVEL_UNSPECIFIED = 0;
  PROPOSAL_INFO_LEVEL_FULL = 1;
  PROPOSAL_INFO_LEVEL_SHORT = 2;
}

message ProposalByFilterRequest {
  optional string dao = 1;
  optional uint64 limit = 2;
  optional uint64 offset = 3;
  repeated string proposal_ids = 4;
  optional bool only_active = 5;
  optional ProposalInfoLevel level = 6;
}

message ProposalByFilterResponse {
  repeated ProposalInfo proposals = 1;
  uint64 total_count = 2;
  repeated ProposalShortInfo proposals_short = 3;
}

message ProposalShortInfo {
  string id = 1;
  string title = 2;
  string state = 3;
  uint64 created = 4;
}
