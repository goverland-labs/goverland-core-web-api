// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proposal.proto

package storage

import (
	"reflect"
	"sync"
	"unsafe"

	"google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
	"google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProposalByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProposalId    string                 `protobuf:"bytes,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposalByIDRequest) Reset() {
	*x = ProposalByIDRequest{}
	mi := &file_proposal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposalByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalByIDRequest) ProtoMessage() {}

func (x *ProposalByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proposal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalByIDRequest.ProtoReflect.Descriptor instead.
func (*ProposalByIDRequest) Descriptor() ([]byte, []int) {
	return file_proposal_proto_rawDescGZIP(), []int{0}
}

func (x *ProposalByIDRequest) GetProposalId() string {
	if x != nil {
		return x.ProposalId
	}
	return ""
}

type ProposalInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Author            string                 `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	DaoId             string                 `protobuf:"bytes,5,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
	Title             string                 `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	State             string                 `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	Type              string                 `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Privacy           string                 `protobuf:"bytes,10,opt,name=privacy,proto3" json:"privacy,omitempty"`
	Spam              bool        `protobuf:"varint,11,opt,name=spam,proto3" json:"spam,omitempty"`
	Timeline          []*Timeline `protobuf:"bytes,12,rep,name=timeline,proto3" json:"timeline,omitempty"`
	Choices           []string    `protobuf:"bytes,13,rep,name=choices,proto3" json:"choices,omitempty"`
	OriginalCreatedAt *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=original_created_at,json=originalCreatedAt,proto3" json:"original_created_at,omitempty"`
	VotingStartedAt   *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=voting_started_at,json=votingStartedAt,proto3" json:"voting_started_at,omitempty"`
	VotingEndedAt     *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=voting_ended_at,json=votingEndedAt,proto3" json:"voting_ended_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ProposalInfo) Reset() {
	*x = ProposalInfo{}
	mi := &file_proposal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalInfo) ProtoMessage() {}

func (x *ProposalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proposal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalInfo.ProtoReflect.Descriptor instead.
func (*ProposalInfo) Descriptor() ([]byte, []int) {
	return file_proposal_proto_rawDescGZIP(), []int{1}
}

func (x *ProposalInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProposalInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ProposalInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ProposalInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ProposalInfo) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *ProposalInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProposalInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ProposalInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProposalInfo) GetPrivacy() string {
	if x != nil {
		return x.Privacy
	}
	return ""
}

func (x *ProposalInfo) GetSpam() bool {
	if x != nil {
		return x.Spam
	}
	return false
}

func (x *ProposalInfo) GetTimeline() []*Timeline {
	if x != nil {
		return x.Timeline
	}
	return nil
}

func (x *ProposalInfo) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *ProposalInfo) GetOriginalCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalCreatedAt
	}
	return nil
}

func (x *ProposalInfo) GetVotingStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.VotingStartedAt
	}
	return nil
}

func (x *ProposalInfo) GetVotingEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.VotingEndedAt
	}
	return nil
}

type Timeline struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        string                 `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timeline) Reset() {
	*x = Timeline{}
	mi := &file_proposal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timeline) ProtoMessage() {}

func (x *Timeline) ProtoReflect() protoreflect.Message {
	mi := &file_proposal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timeline.ProtoReflect.Descriptor instead.
func (*Timeline) Descriptor() ([]byte, []int) {
	return file_proposal_proto_rawDescGZIP(), []int{2}
}

func (x *Timeline) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Timeline) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ProposalByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Proposal      *ProposalInfo          `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposalByIDResponse) Reset() {
	*x = ProposalByIDResponse{}
	mi := &file_proposal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposalByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalByIDResponse) ProtoMessage() {}

func (x *ProposalByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proposal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalByIDResponse.ProtoReflect.Descriptor instead.
func (*ProposalByIDResponse) Descriptor() ([]byte, []int) {
	return file_proposal_proto_rawDescGZIP(), []int{3}
}

func (x *ProposalByIDResponse) GetProposal() *ProposalInfo {
	if x != nil {
		return x.Proposal
	}
	return nil
}

type ProposalByFilterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dao           *string                `protobuf:"bytes,1,opt,name=dao,proto3,oneof" json:"dao,omitempty"`
	Limit         *uint64                `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset        *uint64                `protobuf:"varint,3,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	ProposalIds   []string               `protobuf:"bytes,4,rep,name=proposal_ids,json=proposalIds,proto3" json:"proposal_ids,omitempty"`
	OnlyActive    *bool                  `protobuf:"varint,5,opt,name=only_active,json=onlyActive,proto3,oneof" json:"only_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposalByFilterRequest) Reset() {
	*x = ProposalByFilterRequest{}
	mi := &file_proposal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposalByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalByFilterRequest) ProtoMessage() {}

func (x *ProposalByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proposal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalByFilterRequest.ProtoReflect.Descriptor instead.
func (*ProposalByFilterRequest) Descriptor() ([]byte, []int) {
	return file_proposal_proto_rawDescGZIP(), []int{4}
}

func (x *ProposalByFilterRequest) GetDao() string {
	if x != nil && x.Dao != nil {
		return *x.Dao
	}
	return ""
}

func (x *ProposalByFilterRequest) GetLimit() uint64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ProposalByFilterRequest) GetOffset() uint64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ProposalByFilterRequest) GetProposalIds() []string {
	if x != nil {
		return x.ProposalIds
	}
	return nil
}

func (x *ProposalByFilterRequest) GetOnlyActive() bool {
	if x != nil && x.OnlyActive != nil {
		return *x.OnlyActive
	}
	return false
}

type ProposalByFilterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Proposals     []*ProposalInfo        `protobuf:"bytes,1,rep,name=proposals,proto3" json:"proposals,omitempty"`
	TotalCount    uint64                 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposalByFilterResponse) Reset() {
	*x = ProposalByFilterResponse{}
	mi := &file_proposal_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposalByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalByFilterResponse) ProtoMessage() {}

func (x *ProposalByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proposal_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalByFilterResponse.ProtoReflect.Descriptor instead.
func (*ProposalByFilterResponse) Descriptor() ([]byte, []int) {
	return file_proposal_proto_rawDescGZIP(), []int{5}
}

func (x *ProposalByFilterResponse) GetProposals() []*ProposalInfo {
	if x != nil {
		return x.Proposals
	}
	return nil
}

func (x *ProposalByFilterResponse) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_proposal_proto protoreflect.FileDescriptor

var file_proposal_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x49, 0x64, 0x22, 0xd2, 0x04, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x61, 0x6f, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x61, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x73, 0x70, 0x61, 0x6d, 0x12, 0x2d, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x4a, 0x0a, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x76,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0f, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5d, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x49, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x22, 0xde, 0x01, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x64, 0x61, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x64, 0x61,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x02, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x12,
	0x24, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x64, 0x61, 0x6f, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x22, 0x70, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x32, 0xa6, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x12, 0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a,
	0x09, 0x2e, 0x3b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_proposal_proto_rawDescOnce sync.Once
	file_proposal_proto_rawDescData []byte
)

func file_proposal_proto_rawDescGZIP() []byte {
	file_proposal_proto_rawDescOnce.Do(func() {
		file_proposal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proposal_proto_rawDesc), len(file_proposal_proto_rawDesc)))
	})
	return file_proposal_proto_rawDescData
}

var file_proposal_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proposal_proto_goTypes = []any{
	(*ProposalByIDRequest)(nil),      // 0: storage.ProposalByIDRequest
	(*ProposalInfo)(nil),             // 1: storage.ProposalInfo
	(*Timeline)(nil),                 // 2: storage.Timeline
	(*ProposalByIDResponse)(nil),     // 3: storage.ProposalByIDResponse
	(*ProposalByFilterRequest)(nil),  // 4: storage.ProposalByFilterRequest
	(*ProposalByFilterResponse)(nil), // 5: storage.ProposalByFilterResponse
	(*timestamppb.Timestamp)(nil),    // 6: google.protobuf.Timestamp
}
var file_proposal_proto_depIdxs = []int32{
	6,  // 0: storage.ProposalInfo.created_at:type_name -> google.protobuf.Timestamp
	6,  // 1: storage.ProposalInfo.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 2: storage.ProposalInfo.timeline:type_name -> storage.Timeline
	6,  // 3: storage.ProposalInfo.original_created_at:type_name -> google.protobuf.Timestamp
	6,  // 4: storage.ProposalInfo.voting_started_at:type_name -> google.protobuf.Timestamp
	6,  // 5: storage.ProposalInfo.voting_ended_at:type_name -> google.protobuf.Timestamp
	6,  // 6: storage.Timeline.created_at:type_name -> google.protobuf.Timestamp
	1,  // 7: storage.ProposalByIDResponse.proposal:type_name -> storage.ProposalInfo
	1,  // 8: storage.ProposalByFilterResponse.proposals:type_name -> storage.ProposalInfo
	0,  // 9: storage.Proposal.GetByID:input_type -> storage.ProposalByIDRequest
	4,  // 10: storage.Proposal.GetByFilter:input_type -> storage.ProposalByFilterRequest
	3,  // 11: storage.Proposal.GetByID:output_type -> storage.ProposalByIDResponse
	5,  // 12: storage.Proposal.GetByFilter:output_type -> storage.ProposalByFilterResponse
	11, // [11:13] is the sub-list for method output_type
	9,  // [9:11] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proposal_proto_init() }
func file_proposal_proto_init() {
	if File_proposal_proto != nil {
		return
	}
	file_proposal_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proposal_proto_rawDesc), len(file_proposal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proposal_proto_goTypes,
		DependencyIndexes: file_proposal_proto_depIdxs,
		MessageInfos:      file_proposal_proto_msgTypes,
	}.Build()
	File_proposal_proto = out.File
	file_proposal_proto_goTypes = nil
	file_proposal_proto_depIdxs = nil
}
